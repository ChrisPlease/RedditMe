{"version":3,"sources":["apiReddit.js","app.js"],"names":["search","searchTerm","searchLimit","sortBy","fetch","then","res","json","data","children","map","catch","err","console","log","searchForm","document","getElementById","searchInput","addEventListener","e","value","querySelector","showMessage","results","output","forEach","post","image","preview","images","source","url","title","truncateText","selftext","subreddit","score","innerHTML","preventDefault","message","className","div","createElement","appendChild","createTextNode","searchContainer","insertBefore","setTimeout","remove","text","limit","shortened","indexOf","substring"],"mappings":"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","file":"reddit-me.map","sourcesContent":["export default {\n  search: function(searchTerm, searchLimit, sortBy) {\n    return fetch(\n      `https://cors-anywhere.herokuapp.com/http://www.reddit.com/search.json?q=${searchTerm}&sort=${sortBy}&limit=${searchLimit} `\n    )\n      .then(res => res.json())\n      .then(data => data.data.children.map(data => data.data))\n      .catch(err => console.log(err));\n  }\n};\n\n// (\"use strict\");\n\n// Object.defineProperty(exports, \"__esModule\", {\n//   value: true\n// });\n// exports.default = {\n//   search: function search(searchTerm, searchLimit, sortBy) {\n//     return fetch(\n//       \"http://www.reddit.com/search.json?q=\" +\n//         searchTerm +\n//         \"&sort=\" +\n//         sortBy +\n//         \"&limit=\" +\n//         searchLimit +\n//         \" \"\n//     )\n//       .then(function(res) {\n//         return res.json();\n//       })\n//       .then(function(data) {\n//         return data.data.children.map(function(data) {\n//           return data.data;\n//         });\n//       })\n//       .catch(function(err) {\n//         return console.log(err);\n//       });\n//   }\n// };\n","import reddit from \"./apiReddit\";\n\nconst searchForm = document.getElementById(\"search-form\");\nconst searchInput = document.getElementById(\"search-input\");\n\n// Form event listener\nsearchForm.addEventListener(\"submit\", e => {\n  //  Get search term\n  const searchTerm = searchInput.value;\n  //Get sort\n  const sortBy = document.querySelector('input[name=\"sortby\"]:checked').value;\n\n  // Get limit\n  const searchLimit = document.getElementById(\"limit\").value;\n\n  if (searchTerm === \"\") {\n    showMessage(\"Please add a search term\", \"alert-danger\");\n  }\n\n  searchInput.value = \"\";\n\n  //   search reddit\n  reddit.search(searchTerm, searchLimit, sortBy).then(results => {\n    let output = '<div class=\"card-columns\">';\n    // loop through post\n    results.forEach(post => {\n      //   console.log(results);\n      //   this gets the image if available if not then shows the default image\n      let image = post.preview\n        ? post.preview.images[0].source.url\n        : // : \"https://media.giphy.com/media/7Cl6Q2A13HhkI/giphy.gif\";\n          \"https://cdn.comparitech.com/wp-content/uploads/2017/08/reddit-1.jpg\";\n      output += `\n\n        <div class=\"card\" >\n        <img class=\"card-img-top\" src=${image} alt=\"Card image cap\">\n        <div class=\"card-body\">\n            <h5 class=\"card-title\">${post.title}</h5>\n            <p class=\"card-text\">${truncateText(post.selftext, 100)} </p>\n            <a href=${\n              post.url\n            } target=\"_blank\" class=\"btn btn-primary red\">Read More</a>\n        <hr>\n        <span class=\"badge badge-dark\">Subreddit: ${post.subreddit}</span>\n        <span class=\"badge light\">Score: ${post.score}</span>\n        </div>\n        </div>\n        `;\n    });\n    output += \"</div>\";\n    document.getElementById(\"results\").innerHTML = output;\n  });\n\n  //prevent default\n  e.preventDefault();\n});\n\n// Function shows message\nfunction showMessage(message, className) {\n  //create div\n  const div = document.createElement(\"div\");\n  //   add classes\n  div.className = `alert ${className}`;\n  //   add text\n  div.appendChild(document.createTextNode(message));\n  //Get the parent container\n  const searchContainer = document.getElementById(\"search-container\");\n  // Get search\n  const search = document.getElementById(\"search\");\n  //Insert message\n  searchContainer.insertBefore(div, search);\n\n  // Time out alert\n  setTimeout(() => document.querySelector(\".alert\").remove(), 3000);\n}\n\n// Truncate text\n\nfunction truncateText(text, limit) {\n  const shortened = text.indexOf(\"\", limit);\n  if (shortened === -1) return text;\n  return text.substring(0, shortened);\n}\n"]}